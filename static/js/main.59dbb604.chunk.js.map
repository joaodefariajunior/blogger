{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.jsx","components/PostList.jsx","components/App.js","reducers/index.js","reducers/PostsReducer.jsx","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","title","body","renderList","getState","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDom","render","document","querySelector"],"mappings":"iPAEeA,E,OAAAA,EAAMC,OAAQ,CAC3BC,QAAQ,yCCUGC,EAAa,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHpB,2CAAN,uDAMbC,EAAY,SAAAC,GAAE,8CAAI,WAAMT,GAAN,eAAAC,EAAA,sEACNC,EAAgBC,IAAhB,iBAA8BM,IADxB,OACvBL,EADuB,OAG7BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHpB,2CAAJ,uDChBrBG,E,uKACM,IACAC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAIE,qBAAKG,UAAU,SAAf,SAAyBH,EAAKI,OAH5B,S,GALYC,IAAMC,WAgBhBC,eAJS,SAACC,EAAOC,GAC9B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,EAASG,aAGhDL,CAAyBR,GCdlCc,E,kLAEFZ,KAAKC,MAAMY,uB,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAAAC,GAC1B,OACE,sBAAKd,UAAU,OAAf,UACE,mBAAGA,UAAU,mCACb,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6BAAKc,EAAKC,QACV,4BAAID,EAAKE,UAEX,cAAC,EAAD,CAAYP,OAAQK,EAAKL,cAPFK,EAAKnB,S,+BAepC,OAAO,qBAAKK,UAAU,0BAAf,SAA0CF,KAAKmB,mB,GAvBnCf,IAAMC,WA+BdC,eAJS,SAAAC,GACtB,MAAO,CAAEO,MAAOP,EAAMO,SAKtB,CAAED,mBFnC8B,yDAAM,WAAOzB,EAAUgC,GAAjB,SAAA/B,EAAA,sEAChCD,EAASD,KADuB,OAGtCkC,IAAEC,MAAMF,IAAWN,OAChBC,IAAI,UACJQ,OACAC,SAAQ,SAAA3B,GAAE,OAAIT,EAASQ,EAAUC,OACjC4B,QAPmC,2CAAN,0DEiCnBnB,CAGbM,GC5Bac,EARH,WACV,OACE,qBAAKxB,UAAU,eAAf,SACE,cAAC,EAAD,O,QCDSyB,cAAgB,CAC7Bb,MCLa,WAAqB,IAApBP,EAAmB,uDAAb,GAAGqB,EAAU,uCAClC,MAAkB,gBAAfA,EAAOnC,KACDmC,EAAOlC,QAETa,GDENE,MEPa,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIqB,EAAW,uCACrC,OAAQA,EAAOnC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWc,GAAX,CAAkBqB,EAAOlC,UAC3B,QACE,OAAOa,M,QCGPsB,EAAOC,YAAYC,EAASC,YAAgBC,MAElDC,IAASC,OAAO,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAChB,cAAC,EAAD,MACYO,SAASC,cAAc,Y","file":"static/js/main.59dbb604.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create ({ \n  baseURL:'https://jsonplaceholder.typicode.com'\n})","import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts)\n    .map('userId')\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value();\n};\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('/posts');\n\n  dispatch({ type: 'FETCH_POSTS', payload: response.data });\n};\n\nexport const fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({ type: 'FETCH_USER', payload: response.data });\n};\n\n// export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\n\n//   dispatch({ type: 'FETCH_USER', payload: response.data });\n// });\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass UserHeader extends React.Component {\n  render() {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    return <div className=\"header\">{user.name}</div>;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { user: state.users.find(user => user.id === ownProps.userId) };\n};\n\nexport default connect(mapStateToProps)(UserHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '../actions';\nimport UserHeader from './UserHeader';\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPostsAndUsers();\n  }\n\n  renderList() {\n    return this.props.posts.map(post => {\n      return (\n        <div className=\"item\" key={post.id}>\n          <i className=\"large middle aligned icon user\" />\n          <div className=\"content\">\n            <div className=\"description\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n            <UserHeader userId={post.userId} />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return { posts: state.posts };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchPostsAndUsers }\n)(PostList);\n","import React from 'react';\nimport PostList from './PostList';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <PostList/>\n    </div>\n  )\n}\n\nexport default App\n","import {combineReducers} from 'redux';\nimport postsReducer from './PostsReducer';\nimport usersReducer from './usersReducer';\n\n\nexport default combineReducers({\n  posts:postsReducer,\n  users:usersReducer\n});","//eslint-disable-next-line\nexport default (state=[],action)=> {\n if(action.type=== 'FETCH_POSTS'){\n   return action.payload;\n }\n return state;\n};","export default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDom from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware} from 'redux';\nimport App from \"./components/App\";\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store= createStore(reducers,applyMiddleware(thunk));\n\nReactDom.render(<Provider store={store}>\n<App/>\n</Provider>,document.querySelector('#root'))"],"sourceRoot":""}